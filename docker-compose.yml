services:
  db:
    restart: always
    image: lexicon/db:latest
    build:
      context: docker/db
    command: |
        postgres
          -c max_connections=200
          -c shared_buffers=512MB
          -c effective_cache_size=16GB
          -c work_mem=128MB
          -c maintenance_work_mem=256MB
          -c min_wal_size=256MB
          -c max_wal_size=8GB
    env_file:
      - .env
    ports:
      - 5555:5432
    networks:
      - lexicon
    volumes:
      - lexicon_db_data:/var/lib/postgresql/data

  lexicon_runner:
    restart: always
    image: lexicon:latest
    build:
      context: .
    volumes:
      - ./config:/lexicon/config:ro
      - ./data:/lexicon/data:ro
      - ./out:/lexicon/out
      - ./raw:/lexicon/raw
      - ./resources:/lexicon/resources:ro
      # Comment these lines if not working locally
      - ./lib:/lexicon/lib:ro
      - ./lexicon-cli:/lexicon/lexicon-cli:ro
      - ./VERSION:/lexicon/VERSION
    env_file:
      - .env
    networks:
      - lexicon
    develop:
      watch:
        - action: sync
          path: .
          target: /lexicon

  lexicon_api:
    restart: always
    image: ghcr.io/osfarm/lexicon-rest-api:latest
    pull_policy: always
    container_name: "lexicon_api"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SCHEMA: ${DB_SCHEMA}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lexicon_api.rule=Host(`lexicon.osfarm.org`)"
      - "traefik.http.routers.lexicon_api.tls=true"
      - "traefik.http.routers.lexicon_api.entrypoints=websecure"
      - "traefik.http.routers.lexicon_api.tls.certresolver=tlsresolver"
      - "traefik.http.routers.lexicon_api.middlewares=gzip"
      - "traefik.http.routers.lexicon_api.service=lexicon_api@docker"
      - "traefik.http.services.lexicon_api.loadbalancer.server.port=8888"
    networks:
      - proxy
      - lexicon

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${N8N_SUBDOMAIN}.${N8N_DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=tlsresolver
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${N8N_SUBDOMAIN}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_HOST=${N8N_SUBDOMAIN}.${N8N_DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_SUBDOMAIN}.${N8N_DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${N8N_GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - /home/ubuntu/n8n-local-files:/files
    networks:
      - proxy
      - lexicon

networks:
  lexicon:
    name: lexicon
  proxy:
    external: true

volumes:
  lexicon_db_data: ~
  n8n_data:
    external: true

